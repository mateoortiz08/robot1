<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v//Z
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAol0rAK1iKwCpYSwAt2AoALJmLgC6aCsAuWkuAL9tMgDMaC4A024vAMtyLgDMci4A1W8wAMdw
        MADFdj8Aynk9AM96PQDQczEA33cyANd6MwDWfTwA33o4ANt8OADefjsA2X48AOl8MgDofzQAvXRBAL53
        RADBd0UAyXpEAM9/RADTf0MA34A7AOiANgDqhDYA7IQ1AOGAOgDmgzoA5IQ+AOmEOADuhTkA74g4APGG
        NgD1iTcA+Ik3APCHOQDyiDkA9Yk4APWLPgDxjD4A9ow9APiKOAD7jDgA/Y46APySOgD+kT0Avqh5ANGA
        RwDag0EA2YRIAM6LWADflVoA74lFAOCLTQD3j0IA75NEAOuTTgDvk04A75hJAPmRQgD+k0AA/ZRDAPiS
        RQD7lUcA/pZGAPecRgD+mUMA8ZFJAPmVSQD+l0kA/ptOAO6OVwDjkVMA5pRXAOqWUgDrnFwA8phVAPaa
        VAD3nVcA+ZtSAP2bUQD+nFEA+JtUAPqcVgD9nlQA9p5aAPCdXAD3n1wA+59aAPifXgD9oEYA8qBXAPql
        UwD9oFYA/qhWAP2hWQD6oV8A/qJcAP6kXgD+q1gA05VkAN2aZgDYmmsA649gAOeTYwDilmMA7JJhAOSa
        ZQDsnGEA751mAOaUaADxmWIA8JpwANikawDuoGYA7aBoAOmjbADspWwA6KluAPSmYgD7pWIA/qZiAP6n
        ZAD8q2AA/ahmAPGhaQDwomwA8KZsAPatbwD9qmkA/qxrAP2tbQD9sWoA/rxvAOSjdADoonIA7qVzAOOl
        fQDmrngA5K19AOmufQDtrHwA/qZ1APCvdQD7rXEA/a5wAPiqdgD2r3kA8qp+AO60fgD1sHcA/rBzAP2x
        dQD+uHcA9LN8APmxeAD9tXoA+rZ/AP22fQD+vHoA/rh+AP6+fQD+wnkA372aAN65nwDlp4EA6a2PAP2v
        iADusIMA7bGHAOm3hgDttYQA57CJAOezjQDrto8A9bSAAPq2ggD7tYQA9biFAPu4gwD9uYIA/bqEAP68
        hgDyt4sA97eIAPy0igD1vIwA/b2JAP6/jQDhvZEA8b6UAPm9kQD6v5QAyb+vAOK9pAD+wYYA/siGAP7D
        jADnwJQA6sKWAOLEmwD+wpEA+MSTAPnBlQD+xpQA/s6RAPrFngD8x50A/cqbAN3HogDUxagA6cegAOTJ
        ogDgwKsA/cyiAPjGqAD9z6gA+s6uAP7UpAD91KwA/tmvAOHFsgDgzLUA6ciyAO/PugDxybQA5dG+APHT
        sAD+1bEA/tqyAPLSvgD+1roA/dq4AP7ewQD73sgA/uHCAP7kygD+6MwA/ubSAP3o0wD+8uQA/vXqAP74
        8AD///8AAAAAAAAAALDO6wAAAOkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOEcDxAhHQEDBQcIIJUAAAAA
        AAAAAAAAAAAAAAAAAAAAHg8RFRkQAgcOFCkjCgRx9gAAAAAAAAAAAAAAAAAAAAAfERUiJxcGCyUuLhoS
        RGtbeAAAAAAAAAAAAAAAAAAAADsVIikvJAwxOUgyKFpuhVBAduUAAAAAAAAAAAAAAAAAPSInLzU1M1FS
        XFiEhYaISVNfXnXsAAAAAAAAAAAAAABBJy81N0xdaW5ly6SIjYZge2tgFgm4AAAAAAAAAAAAAFUqMTdM
        XW6Ij4mUnY6dhpxsbmkqDRgAAAAAAAAAAAAAfzBLbWtujqSninmPo6iPo4iFhTQTJgAAAAAAAAAAAAC0
        NIbHqI2kwLyknaOpx52kj4bBRxsnAAAAAAAAAAAAAAA2baOIncC8j52jnqCoqamsiGRCLCkAAAAAAAAA
        AAAAAJdJYIikx6qjpJ6yxMjG19WdYU8xKwAAAAAAAAAAAAAAAJhpjqjIrKi87fLazMrnqJ9iTzQtAAAA
        AAAAAAAAAAAAAOqMqMLBwNvk5MXF18KigVdFRzUAAAAAAAAAAAAAAAAAAADKwqqN0fTzs5q9vpiAV1hf
        ggAAAAAAAAAAAAAAAAAAAADup27V9ON8c5O3oYtiY7YAAAAAAAAAAAAAAAAAAAAAAAAAmLu5sXp0dz+b
        ockAAAAAAAAAAAAAAAAAAAAAAAAAAADNkrq1lH5XVjoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHKZw7uM
        g2dGfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+VJ+/qJCHaE1DAAAAAAAAAAAAAAAAAAAAAAAAAAAAcDxZ
        qMjCpZBvZjgAAAAAAAAAAAAAAAAAAAAAAAAAAABWSm3I4tjPq5BqTt0AAAAAAAAAAAAAAAAAAAAAAAAA
        AK9Mo+Lw59zRrZBp1AAAAAAAAAAAAAAAAAAAAAAAAAAA3m3H5/f39ObRrI7fAAAAAAAAAAAAAAAAAAAA
        AAAAAACWnefw+Pr49NzCo9QAAAAAAAAAAAAAAAAAAAAAAAAAAI2P+NDo+Pn359is0gAAAAAAAAAAAAAA
        AAAAAAAAAAAAj53kka7Z5vHo3MLTAAAAAAAAAAAAAAAAAAAAAAAAAADVncfk+Pz+/frwx+AAAAAAAAAA
        AAAAAAAAAAAAAAAAAACdwdzx9/n359zWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPqqyOLn8Ofi7wAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD48PT1+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP47///4AD//+AAH//gAA//4AAD/+AAAP/gAAB/4AAAf+AAAH/gAAB/8AAAf/AAAH/4A
        AB//AAAf/8AAH//gAD//+AD///gD///4A///8AP//+AD///gAf//4AH//+AB///gAf//4AH//+AB///g
        Af//8AP///AH///8H///////
</value>
  </data>
</root>